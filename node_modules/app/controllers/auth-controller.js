var PROC = require('app/procedure');
var DB = require('app/database');
var BCRYPT = require('bcrypt-nodejs');

function store_login_info(doc, msg) {
    var token = generate_token();
    var username = doc.username;
    doc.auth.token = token;
    doc.auth.active = true;
    doc.save(function (err) {
        if (!err) {
            msg.send({token : token});
            var log = new DB.auth_logs({
                username : username,
                auth : {
                    token : token,
                    addr : null,
                    active : true,
                    start : null,
                    end : null
                }
            });
            log.save(function (err) {
                if (!err) {
                } else {
                    msg.error(1);
                }
            });
        } else {
            msg.error(1);
        }
    });
}

function login(username, password, msg) {
    var hpassword = BCRYPT.hashSync(password);
    PROC.find_user_on_username_password(username, hpassword, function (err, doc) {
        if (doc) {
            if (doc.auth.active === true) {
                msg.send({token : doc.auth.token});
            } else {
                store_login_info(doc, msg);
            }
        } else {
            msg.error(0);
        }
    });
}

function logout(username, token, msg) {
    PROC.logout_user_on_username_token_active(username, token, function (err, count) {
        if (count === 1) {
            PROC.deactivate_user_log_on_username_token_active(username, token, function (err, count) {
                if (count === 1) {
                    msg.send();
                } else {
                    msg.error(1);
                }
            });
        } else {
            msg.error(0);
        }
    });
}

function register(username, password, msg) {
    PROC.find_user_on_username(username, function (doc) {
        if (doc) {
            msg.error(0);
        } else {
            var hpassword = BCRYPT.hashSync(password);
            var user = new DB.users({
                	username : username,
                    profile : {
                        password : hpassword,
                        name : null,
                        nick : null,
                        tel : null,
                        address : null,
                        avatar : null
                    },
                    accounting : {
                        balance : null,
                        role : null,
                        locked : null
                    },
                    auth : {
                        token : null,
                        active : false
                    }
            });
            user.save(function (err) {
                if (!err) {
                    store_login_info(user, msg);
                } else {
                    msg.error(1);
                }
            });
        }
    });
}

exports.auth = auth;