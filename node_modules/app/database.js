var mongoose = require('mongoose');
var OID = mongoose.Schema.ObjectId;

var users_schema = mongoose.Schema({
	username : String,
	profile : {
		password : String,
		name : String,
		nick : String,
		tel : String,
		address : String,
		avatar : String
	},
    accounting : {
		balance : Number,
		role : String,
		locked : Boolean
	},
    auth : {
        token : String,
        active : Boolean
    }
});
var users = mongoose.model('users', users_schema);

var auth_logs_schema = mongoose.Schema({
    username : String,
    auth : {
        token: String,
        addr : String,
        active : Boolean,
        start : Object,
        end : Object
    }
});
var auth_logs = mongoose.model('authlogs', auth_logs_schema);

var payments_schema = mongoose.Schema({
    username : String,
    id : String,
    date : Object,
	vocher : Number
});
var payments = mongoose.model('payments', payments_schema);

var games_schema = mongoose.Schema({
    gname : String,
    exename : String,
    platform : String,
    icon : String,
	developer : String
});
var games = mongoose.model('games', games_schema);

var lobbies_schema = mongoose.Schema({
    gname : String,
    lname : String,
    cname: String,
	password : String,
	limit : Number,
	addr_range : String,
	host : {
		username : String,
		addr : String
	},
	users : [
		{
			username : String,
			addr : String
		}
	],
	snaddr : String
});
var lobbies = mongoose.model('lobbies', lobbies_schema);

var config_schema = mongoose.Schema({
	supernodes : [String]
});
var config = mongoose.model('config', config_schema);

function init () {
    var db;
	mongoose.connect('mongodb://localhost:27017/classic_0_0_1');
    db = mongoose.connection;
    db.on('error', console.error.bind(console, 'db connection error'));
    db.once('open', function callback() {
        console.log('db openned');
    });
}

init();

exports.OID = OID;
exports.users = users;
exports.auth_logs = auth_logs;
exports.games = games;
exports.lobbies = lobbies;
exports.payments = payments;
exports.config = config;